##################################this all rules built from c code program###########################



########basic rule############### from c code####################
alert tcp any any -> any 80 (msg:"Potential Buffer Overflow Attack - NOP sled detected"; content:"|90 90 90 90 90 90 90 90|"; depth:32; threshold:type limit, track by_src, count 1, seconds 
60; sid:1000001; rev:1;)
################all types of NOP###########
alert tcp any any -> any any (msg:"Potential Buffer Overflow Attack - Various NOP sleds detected"; 
content:"|8D 74 26 00|"; 
content:"|8D 76 00|"; 
content:"|89 F6|"; 
content:"|8D 4E 00|"; 
content:"|90 90|"; 
threshold:type limit, track by_src, count 1, seconds 60; sid:1000005; rev:1;)


#####################shellcode#################################
alert tcp any any -> any any (msg:"Buffer Overflow - Shellcode execution attempt"; content:"|31 C0 50 68 2F 2F 73 68 68 2F 62 69 6E 89 E3 50 53 89 E1 B0 0B CD 80|"; sid:1000002; rev:1;)


########### payload size##############
alert tcp any any -> any any (msg:"Possible Buffer Overflow - Large Payload"; dsize:>256; sid:1000003; rev:1;)


##########regex####################### at least 10 occurrences with regexx###########
alert tcp any any -> any any (msg:"Buffer Overflow - Long NOP Sled"; pcre:"/(\x90{10,})/"; sid:1000004; rev:1;)

alert tcp any any -> any any (msg:"Potential Buffer Overflow Attack - NOP sled detected using regex"; 
pcre:"/(\x8D\x74\x26\x00|\x8D\x76\x00|\x89\xF6|\x8D\x4E\x00|\x90\x90)/"; 
threshold:type limit, track by_src, count 1, seconds 60; 
sid:1000006; 
rev:1;)


###############argeting the USER command used in FTP authentication#################
alert tcp any any -> any 21 (msg:"Buffer Overflow - FTP Command Overflow"; content:"USER "; pcre:"/USER .{200,}/"; sid:1000009; rev:1;)

